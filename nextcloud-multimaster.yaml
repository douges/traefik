version: '3.3'

services: 


 nextcloud: 
  image: nextcloud-homolog
  command: /usr/sbin/apache2 -DFOREGROUND
  depends_on:
   - redis
  deploy:
   labels: 
     - "traefik.port=80"
     - "traefik.backend=nextcloud"
     - "traefik.backend.healthcheck.port=80"
     - "traefik.frontend.rule=Host:nextcloud.teste.com"
     - "traefik.backend.healthcheck.interval=2s"
     - "traefik.backend.loadbalancer.method=drr"
     - "traefik.backend.maxconn.amount=400"
     - "traefik.backend.maxconn.extractorfunc=client.ip" 
     - "traefik.backend.loadbalancer.sticky=true"
   replicas: 1
  volumes:
   - /srv/data/:/data

 onlyoffice:
  image: onlyoffice/documentserver
  deploy:
   labels:
     - "traefik.port=80"
     - "traefik.backend=onlyoffice"
     - "traefik.backend.healthcheck.port=80"
     - "traefik.frontend.rule=Host:onlyoffice.teste.com"
     - "traefik.backend.healthcheck.interval=2s"
     - "traefik.backend.loadbalancer.sticky=true"
   replicas: 1
   placement:
    constraints:
     - node.hostname == manager
 

 redis:
  image: redis 
  deploy:
   replicas: 1 
   placement:
    constraints: 
     - node.hostname == manager


 proxy_init:
  image: traefik
  command:
      - "--web" 
      - "storeconfig"
      - "--api"
      - "--entrypoints=Name:http Address::80 Redirect.EntryPoint:https"
      - "--entrypoints=Name:https Address::443 TLS"
      - "--defaultentrypoints=http,https"
      - "--acme"
      - "--acme.storage=traefik/acme/account"
      - "--docker.domain=nextcloud.teste.com"
      - "--acme.entryPoint=https"
      - "--acme.httpChallenge.entryPoint=http"
      - "--acme.onHostRule=true"
      - "--acme.onDemand=false"
      - "--docker"
      - "--docker.swarmmode"
      - "--docker.watch"
      - "--consul"
      - "--consul.endpoint=consul:8500"
      - "--consul.prefix=traefik"
      - "--logLevel=INFO"
  volumes: 
    - /var/run/docker.sock:/var/run/docker.sock
  depends_on:
   - consul
  deploy:
   placement:
    constraints:
      - node.hostname == manager
   restart_policy:
    condition: on-failure
 traefik:
  image: traefik
  depends_on:
      - traefik_init
      - consul
  command:
      - "--consul"
      - "--consul.endpoint=consul:8500"
      - "--consul.prefix=traefik"   
  volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  

  ports:
      - target: 80
        published: 80
        mode: host
      - target: 443
        published: 443
        mode: host
      - target: 8080
        published: 8080
        mode: host

  deploy:
   mode: global
   update_config:
    parallelism: 1
    delay: 10s
   restart_policy:
     condition: on-failure


 consul:
    image: consul
    command: agent -server -bootstrap-expect=1
    environment:
      - CONSUL_LOCAL_CONFIG={"server":true}
      - CONSUL_BIND_INTERFACE=eth0
      - CONSUL_CLIENT_INTERFACE=eth0
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.hostname == manager
      restart_policy:
        condition: on-failure

volumes:
 consul-data:
 
